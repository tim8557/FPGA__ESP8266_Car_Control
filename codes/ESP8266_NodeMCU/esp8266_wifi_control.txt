#include <ESP8266WiFi.h>
#include <ESP8266WiFiMulti.h>
#include <ESP8266WebServer.h>
#include <FS.h>

ESP8266WiFiMulti wifiMulti;     

ESP8266WebServer esp8266_server(80);    

void setup() {
  Serial.begin(9600);          
  Serial.println("");
  pinMode(D0, OUTPUT);
  pinMode(D1, OUTPUT);
  pinMode(D2, OUTPUT);
  pinMode(D3, OUTPUT);
  digitalWrite(D0, LOW);
  digitalWrite(D1, LOW);
  digitalWrite(D2, LOW);
  digitalWrite(D3, LOW);
  
  wifiMulti.addAP("TP-LINK_BC4A", "99667412");
  wifiMulti.addAP("ssid_from_AP_2", "your_password_for_AP_2"); 
  wifiMulti.addAP("ssid_from_AP_3", "your_password_for_AP_3"); 
  Serial.println("Connecting ...");                            

  int i = 0;  
  while (wifiMulti.run() != WL_CONNECTED) { 
    delay(1000);
    Serial.print(i++); Serial.print(' ');
  }
  
  
  // WiFi?接成功后?通?串口??器?出?接成功信息 
  Serial.println('\n');
  Serial.print("Connected to ");
  Serial.println(WiFi.SSID());              
  Serial.print("IP address:\t");
  Serial.println(WiFi.localIP());           

  if(SPIFFS.begin()){                       
    Serial.println("SPIFFS Started.");
  } else {
    Serial.println("SPIFFS Failed to Start.");
  }     
 
 
  esp8266_server.on("/readADC", handleADC);
  esp8266_server.on("/acclerate", handleACC);
  esp8266_server.on("/decelerate", handleDCC);
  esp8266_server.on("/stop", handlestop);
  esp8266_server.on("/left", handleleft);
  esp8266_server.on("/right", handleright);
  esp8266_server.on("/forward", handleforward);
  esp8266_server.on("/back", handleback);
  
  esp8266_server.onNotFound(handleUserRequest); 


  esp8266_server.begin();
  Serial.println("HTTP server started");
}

void loop(void) {
  esp8266_server.handleClient();
}


void handleADC() {
 int a = analogRead(A0);
 String adcValue = String(a);
 
 esp8266_server.send(200, "text/plain", adcValue); 
}

//控制馬達加速
void handleACC(){
  digitalWrite(D1,LOW);
  delay(5);
  digitalWrite(D1,HIGH);
  digitalWrite(D2,LOW);
  delay(5);
  digitalWrite(D2,LOW);
  digitalWrite(D3,LOW);
  delay(5);
  digitalWrite(D3,LOW);
  String motor_speed ="increase";
  esp8266_server.send(200, "text/plain ", motor_speed); 
 }

 //控制馬達減速
void handleDCC(){
  digitalWrite(D1,LOW);
  delay(5);
  digitalWrite(D1,LOW);
  digitalWrite(D2,LOW);
  delay(5);
  digitalWrite(D2,HIGH);
  digitalWrite(D3,LOW);
  delay(5);
  digitalWrite(D3,LOW);
  
  String motor_speed ="decrease";
  esp8266_server.send(200, "text/plain", motor_speed); 
 }

//控制馬達停止
 void handlestop(){
  digitalWrite(D1,LOW);
  delay(5);
  digitalWrite(D1,HIGH);
  digitalWrite(D2,LOW);
  delay(5);
  digitalWrite(D2,HIGH);
  digitalWrite(D3,LOW);
  delay(5);
  digitalWrite(D3,HIGH);
  
  String motor_speed ="stop";
  esp8266_server.send(200, "text/plain", motor_speed); 
 }

//控制馬達左轉
void handleleft(){
  digitalWrite(D1,LOW);
  delay(5);
  digitalWrite(D1,HIGH);
  digitalWrite(D2,LOW);
  delay(5);
  digitalWrite(D2,HIGH);
  digitalWrite(D3,LOW);
  delay(5);
  digitalWrite(D3,LOW);
  String motor_speed ="left";
  esp8266_server.send(200, "text/plain ", motor_speed); 
 }

 //控制馬達右轉
void handleright(){
  digitalWrite(D1,LOW);
  delay(5);
  digitalWrite(D1,LOW);
  digitalWrite(D2,LOW);
  delay(5);
  digitalWrite(D2,LOW);
  digitalWrite(D3,LOW);
  delay(5);
  digitalWrite(D3,HIGH);
  String motor_speed ="right";
  esp8266_server.send(200, "text/plain ", motor_speed); 
 }

  //控制馬達正轉
void handleforward(){
  digitalWrite(D0, HIGH);
  digitalWrite(D1,LOW);
  delay(5);
  digitalWrite(D1,HIGH);
  digitalWrite(D2,LOW);
  delay(5);
  digitalWrite(D2,LOW);
  digitalWrite(D3,LOW);
  delay(5);
  digitalWrite(D3,HIGH);
  String motor_speed ="forward";
  esp8266_server.send(200, "text/plain ", motor_speed); 
 }

   //控制馬達反轉
void handleback(){
  digitalWrite(D0, LOW);
  digitalWrite(D1,LOW);
  delay(5);
  digitalWrite(D1,LOW);
  digitalWrite(D2,LOW);
  delay(5);
  digitalWrite(D2,HIGH);
  digitalWrite(D3,LOW);
  delay(5);
  digitalWrite(D3,HIGH);
  String motor_speed ="back";
  esp8266_server.send(200, "text/plain ", motor_speed); 
 }
 

void handleUserRequest() {         
     
  String reqResource = esp8266_server.uri();
  Serial.print("reqResource: ");
  Serial.println(reqResource);
  
  bool fileReadOK = handleFileRead(reqResource);

  if (!fileReadOK){                                                 
    esp8266_server.send(404, "text/plain", "404 Not Found"); 
  }
}

bool handleFileRead(String resource) {            

  if (resource.endsWith("/")) {                   
    resource = "/index.html";                     
  } 
  
  String contentType = getContentType(resource);  
  
  if (SPIFFS.exists(resource)) {                     
    File file = SPIFFS.open(resource, "r");          
    esp8266_server.streamFile(file, contentType);
    file.close();                                
    return true;                                 
  }
  return false;                                  
}

String getContentType(String filename){
  if(filename.endsWith(".htm")) return "text/html";
  else if(filename.endsWith(".html")) return "text/html";
  else if(filename.endsWith(".css")) return "text/css";
  else if(filename.endsWith(".js")) return "application/javascript";
  else if(filename.endsWith(".png")) return "image/png";
  else if(filename.endsWith(".gif")) return "image/gif";
  else if(filename.endsWith(".jpg")) return "image/jpeg";
  else if(filename.endsWith(".ico")) return "image/x-icon";
  else if(filename.endsWith(".xml")) return "text/xml";
  else if(filename.endsWith(".pdf")) return "application/x-pdf";
  else if(filename.endsWith(".zip")) return "application/x-zip";
  else if(filename.endsWith(".gz")) return "application/x-gzip";
  return "text/plain";
}